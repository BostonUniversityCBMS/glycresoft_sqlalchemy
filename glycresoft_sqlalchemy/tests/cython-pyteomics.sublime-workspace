{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"isotop",
				"isotope_num"
			],
			[
				"Impo",
				"ImportError	class"
			],
			[
				"exc",
				"except	(cmass.pyx)"
			],
			[
				"data",
				"datafiles"
			],
			[
				"pair",
				"pair_counting"
			],
			[
				"pair_",
				"pair_counting	module"
			],
			[
				"include_",
				"include_glycan	(sequence.py)"
			],
			[
				"Glycan",
				"GlycanComposition	class"
			],
			[
				"compo",
				"composition_list"
			],
			[
				"frag",
				"fragments"
			],
			[
				"Glyca",
				"GlycanComposition"
			],
			[
				"colle",
				"collectiontools	(pair_counting.py)"
			],
			[
				"joi",
				"join_table_accumulator"
			],
			[
				"Theo",
				"TheoreticalGlycanCombinationTheoreticalGlycanComposition	instance"
			],
			[
				"combin",
				"combination_id	(glycomics.py)"
			],
			[
				"comb_",
				"comb_accumulator"
			],
			[
				"G",
				"Glycan"
			],
			[
				"uniq",
				"unique_unordered"
			],
			[
				"tot",
				"total_possible_outcomes"
			],
			[
				"proces",
				"process_match"
			],
			[
				"n_t",
				"n_term_probability"
			],
			[
				"Peak",
				"PeakGroupMatchType"
			],
			[
				"PeakGroupMath",
				"PeakGroupMatchType	(database_search.py)"
			],
			[
				"fragme",
				"fragment_series"
			],
			[
				"backbon",
				"backbone_score"
			],
			[
				"backb",
				"backbone_weight"
			],
			[
				"backon",
				"backbone_score"
			],
			[
				"back",
				"backbone_score"
			],
			[
				"glycosy",
				"glycosylated_y_ions	(data_model.py)"
			],
			[
				"glyco",
				"glycosylated_b_ions	(data_model.py)"
			],
			[
				"glycopep",
				"glycopeptide_sequence"
			],
			[
				"make_",
				"make_fragment_map	function"
			],
			[
				"fragm",
				"fragment_map"
			],
			[
				"Vlu",
				"ValueError	class"
			],
			[
				"PeakGr",
				"PeakGroupMatchType	(database_search.py)"
			],
			[
				"theore",
				"theoretical"
			],
			[
				"hypothesis_sampl",
				"hypothesis_sample_match_id	(database_search.py)"
			],
			[
				"lower",
				"lower_edge"
			],
			[
				"Value",
				"ValueError	class"
			],
			[
				"exce",
				"except"
			],
			[
				"bat",
				"batch_match_peak_group"
			],
			[
				"hypothesis",
				"hypothesis_id"
			],
			[
				"theoretical",
				"theoretical_type	(database_search.py)"
			],
			[
				"observ",
				"observed_ions_path"
			],
			[
				"datab",
				"database_path"
			],
			[
				"clasi",
				"classification	module"
			],
			[
				"Peka",
				"PeakGroupMatching	class"
			],
			[
				"mass_shif",
				"mass_shift_offset_matching	module"
			],
			[
				"from_",
				"from_parameter_vector	function"
			],
			[
				"Classif",
				"PeakGroupClassification"
			],
			[
				"classifi",
				"classification	module"
			],
			[
				"Decon",
				"Decon2LSPeakGrouper	class"
			],
			[
				"expa",
				"expected_a_peak_regression"
			],
			[
				"exp",
				"expanding_window"
			],
			[
				"centroi",
				"centroid_scan_error_regression"
			],
			[
				"a_p",
				"expected_a_peak_regression"
			],
			[
				"Joint",
				"JointPeakGroupMatch	class"
			],
			[
				"glycan_comp",
				"glycan_composition_filters"
			],
			[
				"theo",
				"theoretical_match_id	(peak_grouping.py)"
			],
			[
				"result",
				"results_type"
			],
			[
				"gen",
				"generator	(peak_grouping.py)"
			],
			[
				"resul",
				"results_type"
			],
			[
				"mono",
				"monosaccharide_filters"
			],
			[
				"reverse",
				"reverse_preserve_sequon"
			],
			[
				"revers",
				"reverse_preserve_sequon"
			],
			[
				"centr",
				"centroid_scan_error	(peak_grouping.py)"
			],
			[
				"charge_",
				"charge_state_count	(peak_grouping.py)"
			],
			[
				"as",
				"asdecimal"
			],
			[
				"modifi",
				"modification_state_count"
			],
			[
				"comma",
				"commands	(meta.yaml)"
			],
			[
				"new",
				"newProteinId"
			],
			[
				"disp",
				"display"
			],
			[
				"display",
				"display_table"
			],
			[
				"prot",
				"protein_view"
			],
			[
				"view_gly",
				"view_glycopeptide_composition_hypothesis"
			],
			[
				"Glyc",
				"GlycReSoftLogo	(GlycReSoftLogo.svg)"
			],
			[
				"displ",
				"display_table	(container.templ)"
			],
			[
				"hypo",
				"hypothesis"
			],
			[
				"hyp",
				"hypothesis_id	(peak_grouping.py)"
			],
			[
				"contentU",
				"contentURLTemplate"
			],
			[
				"ajax",
				"ajaxWithContext	(view-glycan-composition-hypothesis.coffee)"
			],
			[
				"regis",
				"register_blueprint"
			],
			[
				"view_gl",
				"view_glycan_composition_hypothesis"
			],
			[
				"Theore",
				"TheoreticalGlycopeptide	class"
			],
			[
				"flat",
				"flatten	(peak_grouping.py)"
			],
			[
				"combinatori",
				"combinatorial_monosaccharide_name"
			],
			[
				"item",
				"itemgetter	class"
			],
			[
				"app",
				"append	(peak_grouping.py)"
			],
			[
				"colu",
				"column"
			],
			[
				"col",
				"columns"
			],
			[
				"constr",
				"constraint_rhs"
			],
			[
				"rando",
				"random_string	(make_glycan_hypothesis.py)"
			],
			[
				"has",
				"has_custom_derivatization"
			],
			[
				"has_cu",
				"has_custom_reduction"
			],
			[
				"constrat",
				"constraints	(do_combinatorial_glycan_hypothesis.py)"
			],
			[
				"Comb",
				"CombinatorialGlycanHypothesisTask	(do_combinatorial_glycan_hypothesis.py)"
			],
			[
				"Combin",
				"CombinatoricCompositionGenerator	(constrained_combinatorics.py)"
			],
			[
				"deri",
				"derivatization_type"
			],
			[
				"reduc",
				"reduction_type"
			],
			[
				"rules",
				"rules_table	param"
			],
			[
				"Constr",
				"ConstrainedCombinatoricsGlycanHypothesisBuilder	class"
			],
			[
				"task",
				"taskmain"
			],
			[
				"include_hum",
				"include_human_n_glycan"
			],
			[
				"custom",
				"custom_derivatization_type"
			],
			[
				"tandem_gl",
				"tandem_glycopeptide_search"
			],
			[
				"tandem",
				"tandem_glycopeptide_search	(serve.py)"
			],
			[
				"glycres",
				"glycresoft_sqlalchemy"
			],
			[
				"Mass",
				"MassShift"
			],
			[
				"make",
				"make_glycopeptide_hypothesis	statement"
			],
			[
				"do_gl",
				"do_naive_glycopeptide_hypothesis	(serve.py)"
			],
			[
				"Integr",
				"IntegratedOmicsGlycopeptideHypothesisBuilderTask	class"
			],
			[
				"view_d",
				"view_database_search_results	(serve.py)"
			],
			[
				"sample",
				"sample_management	statement"
			],
			[
				"sample_m",
				"sample_management	(sample_management.py)"
			],
			[
				"BUP",
				"BUPIDYamlParseTask"
			],
			[
				"Decon2LS",
				"Decon2LSIsosParseTask"
			],
			[
				"csv",
				"export_csv_task"
			],
			[
				"Glyco",
				"GlycopeptideMatch"
			],
			[
				"Hyp",
				"HypothesisSampleMatch	class"
			],
			[
				"json_",
				"json_api	module"
			],
			[
				"Hypothe",
				"HypothesisSampleMatch"
			],
			[
				"server",
				"server_sent_events"
			],
			[
				"json",
				"jsonify"
			],
			[
				"redu",
				"reduction_type"
			],
			[
				"random",
				"get_random_string	function"
			],
			[
				"intif",
				"intify	function"
			],
			[
				"hypot",
				"hypothesis_name"
			],
			[
				"optio",
				"options	(peak_grouping.py)"
			]
		]
	},
	"buffers":
	[
		{
			"file": "/D/Programming/cython-pyteomics/setup.py",
			"settings":
			{
				"buffer_size": 819,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/D/Programming/cython-pyteomics/test/test_cmass_compat.py",
			"settings":
			{
				"buffer_size": 9637,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/D/Programming/cython-pyteomics/pyteomics/cythonize/cmass.pyx",
			"settings":
			{
				"buffer_size": 32268,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/D/Programming/cython-pyteomics/pyteomics/cythonize/cmass.pxd",
			"settings":
			{
				"buffer_size": 987,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/D/Programming/cython-pyteomics/makefile",
			"settings":
			{
				"buffer_size": 178,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 490.0,
		"last_filter": "doc",
		"selected_items":
		[
			[
				"doc",
				"AutoDocstring: Current"
			],
			[
				"javas",
				"Set Syntax: JavaScript"
			],
			[
				"html",
				"Set Syntax: HTML"
			],
			[
				"upc",
				"Convert Case: Upper Case"
			],
			[
				"setsy",
				"Set Syntax: Cython"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"fold",
				"Code Folding: Fold Tag Attributes"
			],
			[
				"coffe",
				"Set Syntax: CoffeeScript"
			],
			[
				"pe",
				"User: Python PEP8 Autoformat"
			],
			[
				"sql",
				"Set Syntax: SQL"
			],
			[
				"jin",
				"Set Syntax: HTML (Jinja Templates)"
			],
			[
				"python",
				"Set Syntax: Python"
			],
			[
				"sort",
				"Sort Lines"
			],
			[
				"pretty",
				"HTMLPrettify"
			],
			[
				"preview",
				"Markdown Preview: Preview in Browser"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"remo",
				"Package Control: Remove Package"
			],
			[
				"install p",
				"Package Control: Install Package"
			],
			[
				"rst",
				"Set Syntax: reStructuredText Improved"
			],
			[
				"pep",
				"User: Python PEP8 Autoformat"
			],
			[
				"setsyn Jul",
				"Set Syntax: Julia"
			],
			[
				"autodo",
				"AutoDocstring: Current"
			],
			[
				"jinj",
				"Set Syntax: HTML (Jinja Templates)"
			],
			[
				"autodoc",
				"AutoDocstring: Current"
			],
			[
				"setsyn text",
				"Set Syntax: Plain Text"
			],
			[
				"upcas",
				"Convert Case: Upper Case"
			],
			[
				"a",
				"AutoDocstring: Current"
			],
			[
				"autod",
				"AutoDocstring: All"
			],
			[
				"pep8",
				"User: Python PEP8 Autoformat"
			],
			[
				"setsyn p",
				"Set Syntax: Python"
			],
			[
				"syn xml",
				"Set Syntax: XML"
			],
			[
				"cmake",
				"Set Syntax: CMake"
			],
			[
				"upcase",
				"Convert Case: Upper Case"
			],
			[
				"fold doc",
				"Fold Python : unfold content"
			],
			[
				"unfold",
				"Python Docstrings: Unfold"
			],
			[
				"docfold",
				"Python Docstrings: Unfold"
			],
			[
				"docfo",
				"Python Docstrings: Unfold"
			],
			[
				"folddoc",
				"Fold Python : show documentation"
			],
			[
				"fo",
				"Python Docstrings: Fold"
			],
			[
				"ji",
				"Set Syntax: HTML (Jinja Templates)"
			],
			[
				"jinja",
				"Set Syntax: HTML (Jinja Templates)"
			],
			[
				"csv",
				"CSV: Justify columns"
			],
			[
				"UPCASE",
				"Convert Case: Upper Case"
			],
			[
				"syn py",
				"Set Syntax: Python"
			],
			[
				"setsyn js",
				"Set Syntax: JavaScript"
			],
			[
				"syn js",
				"Set Syntax: HTML (Jinja Templates)"
			],
			[
				"setsyn jinja",
				"Set Syntax: HTML (Jinja Templates)"
			],
			[
				"setsyn j",
				"Set Syntax: HTML (Jinja Templates)"
			],
			[
				"insatll",
				"Package Control: Install Package"
			],
			[
				"enable",
				"Package Control: Enable Package"
			],
			[
				"set py",
				"Set Syntax: Python"
			],
			[
				"package",
				"Package Control: Remove Package"
			],
			[
				"go to defin",
				"Anaconda: Goto object definition"
			],
			[
				"go to",
				"Anaconda: Goto object definition"
			],
			[
				"set syn sql",
				"Set Syntax: SQL"
			],
			[
				"setsyn sql",
				"Set Syntax: SQL"
			],
			[
				"rope",
				"Refactor: Create Rope Project"
			],
			[
				"set syn ",
				"Set Syntax: Markdown"
			],
			[
				"set syn po",
				"Set Syntax: Python"
			],
			[
				"lint",
				"Anaconda: Disable linting on this file"
			],
			[
				"auto",
				"Anaconda: Autoformat PEP8 Errors"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"anaconda lint",
				"Anaconda: Next lint error"
			],
			[
				"run test",
				"Anaconda: Run Project Tests"
			],
			[
				"autoformat",
				"Anaconda: Autoformat PEP8 Errors"
			],
			[
				"anaconda",
				"Anaconda: Goto object definition"
			],
			[
				"Anaconda",
				"Anaconda: Run Project Tests"
			],
			[
				"refactor",
				"Refactor: Rename a module"
			],
			[
				"rename mod",
				"Refactor: Rename a module"
			],
			[
				"rename",
				"Refactor: Rename a module"
			],
			[
				"refa",
				"Refactor: Create Rope Project"
			],
			[
				"refacto",
				"Refactor: Create Rope Project"
			],
			[
				"refactor ",
				"Refactor: Rename a module"
			],
			[
				"update",
				"Package Control: Upgrade/Overwrite All Packages"
			],
			[
				"syn sql",
				"Set Syntax: SQL"
			],
			[
				"sele",
				"Bookmarks: Select Previous"
			],
			[
				"word",
				"Word Wrap: Toggle"
			],
			[
				"set syn i",
				"Set Syntax: INI"
			],
			[
				"show",
				"Anaconda: Show error list"
			],
			[
				"wrap",
				"Word Wrap: Toggle"
			],
			[
				"find",
				"Anaconda: Find object usage"
			],
			[
				"set syn python",
				"Set Syntax: Python"
			],
			[
				"caseu",
				"Convert Case: Upper Case"
			],
			[
				"align",
				"AlignTab: Live Preview Mode"
			],
			[
				"alignment",
				"Preferences: Alignment File Settings – Default"
			],
			[
				"install ",
				"Package Control: Install Package"
			],
			[
				"wra",
				"HTML: Wrap Selection With Tag"
			],
			[
				"Tag",
				"Tag: Auto-Format Tags on Document"
			],
			[
				"upp",
				"Convert Case: Upper Case"
			],
			[
				"upper",
				"Convert Case: Upper Case"
			],
			[
				"linting",
				"Anaconda: Disable linting on this file"
			],
			[
				"ling",
				"Anaconda: Enable linting on this file"
			],
			[
				"disa",
				"Anaconda: Disable linting on this file"
			],
			[
				"disable",
				"Anaconda: Disable linting on this file"
			],
			[
				"copy",
				"Copy File Name"
			],
			[
				"case",
				"Convert Case: snake_case"
			],
			[
				"new",
				"ANF: New File"
			],
			[
				"git ",
				"Git: Gui"
			],
			[
				"git statu",
				"Git: Status"
			],
			[
				"git add",
				"Git: Add..."
			],
			[
				"git",
				"Git: Toggle Annotations"
			],
			[
				"crea",
				"Refactor: Create Rope Project"
			],
			[
				"brea",
				"Python Breakpoints: Toggle"
			],
			[
				"up",
				"Package Control: Upgrade Package"
			],
			[
				"upgrad",
				"Package Control: Upgrade Package"
			],
			[
				"upgrade",
				"Package Control: Upgrade Package"
			],
			[
				"syn html",
				"Set Syntax: HTML"
			],
			[
				"clear",
				"Bookmarks: Clear All"
			],
			[
				"cy",
				"Set Syntax: Cython"
			],
			[
				"pla",
				"Set Syntax: Plain Text"
			],
			[
				"syn",
				"Set Syntax: Python"
			],
			[
				"syn cy",
				"Set Syntax: Cython"
			],
			[
				"upda",
				"Package Control: Upgrade Package"
			],
			[
				"import",
				"Python Refactor: Organize Imports"
			],
			[
				"renam",
				"Refactor: Rename a field"
			],
			[
				"renmae",
				"Refactor: Rename a field"
			],
			[
				"rena",
				"Python Refactor: Rename"
			],
			[
				"syn pla",
				"Set Syntax: Plain Text"
			],
			[
				"py",
				"Python Refactor: Rename"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"plugin",
				"SublimeCodeIntel: Disable Plugin"
			],
			[
				"markdown",
				"Preferences: MarkdownEditing Settings – Default"
			],
			[
				"set syn acad",
				"Set Syntax: AcademicMarkdown"
			],
			[
				"acade",
				"Set Syntax: AcademicYaml"
			],
			[
				"academic",
				"Set Syntax: AcademicMarkdown"
			],
			[
				"mark",
				"Markdown Preview: Preview in Browser"
			],
			[
				"",
				"Bookmarks: Select Next"
			],
			[
				"disabl",
				"Package Control: Disable Package"
			]
		],
		"width": 725.0
	},
	"console":
	{
		"height": 153.0,
		"history":
		[
			"os.system(\"cp lodash.min.js ../../static/js/lodash.min.js\")",
			"os.getcwd()",
			"dir(os)",
			"os.pwd()",
			"os.getpwd()",
			"os.getwd()",
			"import os",
			"os.getpwd()",
			"rest_font_size()",
			"import urllib.request,os,hashlib; h = '2deb499853c4371624f5a07e27c334aa' + 'bf8c4e67d14fb0525ba4f89698a6d7e1'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)",
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/D/Programming/cython-pyteomics",
		"/D/Programming/cython-pyteomics/build/lib.win-amd64-2.7/pyteomics",
		"/D/Programming/cython-pyteomics/build/temp.win-amd64-2.7/Release",
		"/D/Programming/cython-pyteomics/build/temp.win-amd64-2.7/Release/pyteomics",
		"/D/Programming/cython-pyteomics/pyteomics/cythonize"
	],
	"file_history":
	[
		"/D/Programming/cython-pyteomics/test/test_cparser_compat.py",
		"/D/Programming/cython-pyteomics/pyteomics/cmass.pyx",
		"/D/Programming/cython-pyteomics/pyteomics/cparser.pyx",
		"/D/Programming/cython-pyteomics/pyteomics/cythonize/__init__.py",
		"/D/Programming/cython-pyteomics/pyteomics/parser_api.py",
		"/D/Programming/exploration/glycresoft_sqlalchemy/glycresoft_sqlalchemy/search_space_builder/glycopeptide_builder/utils.py",
		"/D/Programming/exploration/glycresoft_sqlalchemy/glycresoft_sqlalchemy/search_space_builder/glycopeptide_builder/glycan_utilities.py",
		"/D/Programming/exploration/glycresoft_sqlalchemy/glycresoft_sqlalchemy/data_model/glycomics.py",
		"/D/Programming/exploration/glycresoft_sqlalchemy/glycresoft_sqlalchemy/web_app/services/view_database_search_results.py",
		"/D/Programming/exploration/glycresoft_sqlalchemy/glycresoft_sqlalchemy/web_app/report.py",
		"/D/Programming/exploration/glycresoft_sqlalchemy/glycresoft_sqlalchemy/web_app/static/css/style.css",
		"/D/Programming/exploration/glycresoft_sqlalchemy/glycresoft_sqlalchemy/web_app/html/peak_group_search/components/protein_view.templ",
		"/D/Programming/exploration/glycresoft_sqlalchemy/glycresoft_sqlalchemy/web_app/static/js/src/app/hypothesis-ui.coffee",
		"/D/Programming/exploration/glycresoft_sqlalchemy/glycresoft_sqlalchemy/web_app/static/js/src/app/sample-ui.coffee",
		"/D/Programming/exploration/glycresoft_sqlalchemy/glycresoft_sqlalchemy/web_app/static/js/src/app/hypothesis-sample-match-ui.coffee",
		"/D/Programming/exploration/glycresoft_sqlalchemy/glycresoft_sqlalchemy/web_app/html/peak_group_search/components/glycopeptide_details.templ",
		"/D/Programming/exploration/glycresoft_sqlalchemy/glycresoft_sqlalchemy/web_app/static/js/src/app/view-peak-grouping-database-search.coffee",
		"/D/Programming/exploration/glycresoft_sqlalchemy/glycresoft_sqlalchemy/web_app/html/peak_group_search/components/glycopeptide_match_table.templ",
		"/D/Programming/exploration/glycresoft_sqlalchemy/glycresoft_sqlalchemy/web_app/html/components/preferences.templ",
		"/D/Programming/exploration/glycresoft_sqlalchemy/glycresoft_sqlalchemy/web_app/services/preferences.py",
		"/D/Programming/exploration/glycresoft_sqlalchemy/glycresoft_sqlalchemy/web_app/static/js/src/app/monosaccharide-composition-filter.coffee",
		"/D/Programming/exploration/glycresoft_sqlalchemy/glycresoft_sqlalchemy/web_app/static/css/window_system.css",
		"/D/Programming/exploration/glycresoft_sqlalchemy/glycresoft_sqlalchemy/web_app/static/css/table-view.css",
		"/D/Programming/exploration/glycresoft_sqlalchemy/glycresoft_sqlalchemy/web_app/static/css/monosaccharide-grid.css",
		"/D/Programming/exploration/glycresoft_sqlalchemy/glycresoft_sqlalchemy/web_app/static/css/pagination.css",
		"/D/Programming/exploration/glycresoft_sqlalchemy/glycresoft_sqlalchemy/data_model/database_search.py",
		"/D/Programming/exploration/glycresoft_sqlalchemy/glycresoft_sqlalchemy/data_model/data_model.py",
		"/D/Programming/exploration/glycresoft_sqlalchemy/glycresoft_sqlalchemy/scoring/pair_counting.py",
		"/D/Programming/exploration/glycresoft_sqlalchemy/glycresoft_sqlalchemy/tests/test_end_to_end_informed.py",
		"/D/Programming/exploration/glycresoft_sqlalchemy/glycresoft_sqlalchemy/web_app/serve.py",
		"/D/Programming/exploration/glycresoft_sqlalchemy/glycresoft_sqlalchemy/web_app/html/peak_group_search/components/protein_matches_table.templ",
		"/D/Programming/exploration/glycresoft_sqlalchemy/glycresoft_sqlalchemy/web_app/html/peak_group_search/view_database_search_results.templ",
		"/D/Programming/exploration/glycresoft_sqlalchemy/glycresoft_sqlalchemy/matching/matching.py",
		"/D/Programming/exploration/glycresoft_sqlalchemy/glycresoft_sqlalchemy/matching/peak_grouping/classification.py",
		"/D/Programming/exploration/glycresoft_sqlalchemy/glycresoft_sqlalchemy/web_app/static/js/src/app/common.coffee",
		"/D/Programming/exploration/glycresoft_sqlalchemy/glycresoft_sqlalchemy/web_app/static/nwjs/backend_server_control.js",
		"/D/Programming/exploration/glycresoft_sqlalchemy/glycresoft_sqlalchemy/web_app/static/js/src/lib/action-layer.coffee",
		"/D/Programming/exploration/glycresoft_sqlalchemy/glycresoft_sqlalchemy/web_app/static/js/src/app/view-tandem-glycopeptide-database-search-results.coffee",
		"/D/Programming/exploration/glycresoft_sqlalchemy/glycresoft_sqlalchemy/web_app/html/tandem_glycopeptide_search/components/glycopeptide_details.templ",
		"/D/Programming/exploration/glycresoft_sqlalchemy/glycresoft_sqlalchemy/matching/peak_grouping/__init__.py",
		"/D/Programming/exploration/glycresoft_sqlalchemy/glycresoft_sqlalchemy/tests/test_exact_ms2_search_space.py",
		"/D/Programming/exploration/glycresoft_sqlalchemy/glycresoft_sqlalchemy/matching/peak_grouping/mass_shift_offset_matching.py",
		"/D/Programming/exploration/glycresoft_sqlalchemy/glycresoft_sqlalchemy/web_app/task/do_ms1_peak_group_matching.py",
		"/D/Programming/exploration/glycresoft_sqlalchemy/glycresoft_sqlalchemy/search_space_builder/glycopeptide_builder/ms2/search_space_builder.py",
		"/D/Programming/exploration/glycresoft_sqlalchemy/glycresoft_sqlalchemy/matching/peak_grouping/common.py",
		"/D/Programming/exploration/glycresoft_sqlalchemy/glycresoft_sqlalchemy/matching/peak_grouping/pipeline.py",
		"/D/Programming/exploration/glycresoft_sqlalchemy/glycresoft_sqlalchemy/utils/database_utils.py",
		"/D/Programming/exploration/glycresoft_sqlalchemy/glycresoft_sqlalchemy/tests/test_integrated_omics_simple.py",
		"/D/Programming/exploration/glycresoft_sqlalchemy/glycresoft_sqlalchemy/matching/_peak_grouping.py",
		"/D/Programming/exploration/glycresoft_sqlalchemy/glycresoft_sqlalchemy/matching/peak_grouping/grouper.py",
		"/D/Programming/exploration/glycresoft_sqlalchemy/glycresoft_sqlalchemy/data_model/sequencing.py",
		"/D/Programming/exploration/glycresoft_sqlalchemy/glycresoft_sqlalchemy/search_space_builder/glycopeptide_builder/ms2/pooling_make_decoys.py",
		"/D/Programming/exploration/glycresoft_sqlalchemy/glycresoft_sqlalchemy/search_space_builder/glycopeptide_builder/ms2/make_decoys.py",
		"/D/Programming/exploration/glycresoft_sqlalchemy/glycresoft_sqlalchemy/web_app/html/tandem_glycopeptide_search/components/protein_view.templ",
		"/D/Programming/exploration/glycresoft_sqlalchemy/glycresoft_sqlalchemy/web_app/html/tandem_glycopeptide_search/view_database_search_results.templ",
		"/D/Programming/exploration/glycresoft_sqlalchemy/conda.recipe/build.sh",
		"/D/Programming/exploration/glycresoft_sqlalchemy/glycresoft_sqlalchemy/web_app/package.json",
		"/D/Programming/exploration/glycresoft_sqlalchemy/conda.recipe/meta.yaml",
		"/D/Programming/exploration/glycresoft_sqlalchemy/conda.recipe/bld.bat",
		"/C/Users/Joshua/Anaconda/conda-bld/prefix_files.txt",
		"/D/Programming/exploration/glycresoft_sqlalchemy/requirements.txt",
		"/D/Programming/exploration/glycresoft_sqlalchemy/MANIFEST.in",
		"/D/Programming/exploration/glycresoft_sqlalchemy/conda.recipe/flask/meta.yaml",
		"/D/Programming/exploration/glycresoft_sqlalchemy/conda.recipe/pyteomics/meta.yaml",
		"/D/Programming/exploration/glycresoft_sqlalchemy/glycresoft_sqlalchemy/web_app/static/nwjs/seticon.sh",
		"/D/Programming/exploration/glycresoft_sqlalchemy/glycresoft_sqlalchemy/web_app/nwjs_make.sh",
		"/C/Users/Joshua/AppData/Local/Temp/7zOFDAA.tmp/meta.yaml",
		"/C/Users/Joshua/AppData/Local/Temp/7zOCB5.tmp/meta.yaml",
		"/D/Programming/exploration/glycresoft_sqlalchemy/glycresoft_sqlalchemy/web_app/html/view_glycopeptide_composition_hypothesis/components/display_table.templ",
		"/D/Programming/exploration/glycresoft_sqlalchemy/glycresoft_sqlalchemy/web_app/html/view_glycopeptide_hypothesis/container.templ",
		"/D/Programming/exploration/glycresoft_sqlalchemy/glycresoft_sqlalchemy/web_app/services/view_hypothesis.py",
		"/D/Programming/exploration/glycresoft_sqlalchemy/glycresoft_sqlalchemy/web_app/static/js/src/app/view-glycopeptide-hypothesis.coffee",
		"/D/Programming/exploration/glycresoft_sqlalchemy/glycresoft_sqlalchemy/web_app/html/view_glycopeptide_hypothesis/components/display_table.templ",
		"/D/Programming/exploration/glycresoft_sqlalchemy/glycresoft_sqlalchemy/web_app/html/view_glycopeptide_hypothesis/components/protein_matches_table.templ",
		"/D/Programming/exploration/glycresoft_sqlalchemy/glycresoft_sqlalchemy/web_app/static/js/src/app/view-glycopeptide-composition-hypothesis.coffee",
		"/D/Programming/exploration/glycresoft_sqlalchemy/glycresoft_sqlalchemy/web_app/html/view_glycopeptide_composition_hypothesis/container.templ",
		"/D/Programming/exploration/glycresoft_sqlalchemy/glycresoft_sqlalchemy/web_app/html/view_glycopeptide_composition_hypothesis/components/protein_view.templ",
		"/D/Programming/exploration/glycresoft_sqlalchemy/glycresoft_sqlalchemy/web_app/html/view_glycopeptide_composition_hypothesis/components/protein_matches_table.templ",
		"/D/Programming/exploration/glycresoft_sqlalchemy/glycresoft_sqlalchemy/web_app/static/js/src/app/view-glycan-composition-hypothesis.coffee",
		"/D/Programming/exploration/glycresoft_sqlalchemy/glycresoft_sqlalchemy/web_app/html/view_glycan_hypothesis/display_table.templ",
		"/D/Programming/exploration/glycresoft_sqlalchemy/glycresoft_sqlalchemy/web_app/html/view_glycan_hypothesis/container.templ",
		"/D/Programming/exploration/glycresoft_sqlalchemy/glycresoft_sqlalchemy/web_app/static/js/src/app/bind-urls.coffee",
		"/D/Programming/exploration/glycresoft_sqlalchemy/glycresoft_sqlalchemy/web_app/static/nwjs/select_project.html",
		"/D/Programming/exploration/glycresoft_sqlalchemy/glycresoft_sqlalchemy/web_app/static/nwjs/makelogo.sh",
		"/D/Programming/exploration/glycresoft_sqlalchemy/glycresoft_sqlalchemy/search_space_builder/glycan_builder/constrained_combinatorics.py",
		"/D/Programming/exploration/glycresoft_sqlalchemy/glycresoft_sqlalchemy/web_app/Gruntfile.coffee",
		"/D/Programming/exploration/glycresoft_sqlalchemy/glycresoft_sqlalchemy/web_app/static/css/dist/bundle.css",
		"/D/Programming/exploration/glycresoft_sqlalchemy/glycresoft_sqlalchemy/web_app/html/glycan_search_space.templ",
		"/D/Programming/exploration/glycresoft_sqlalchemy/glycresoft_sqlalchemy/web_app/task/do_combinatorial_glycan_hypothesis.py",
		"/D/Programming/exploration/glycresoft_sqlalchemy/glycresoft_sqlalchemy/web_app/html/layout.templ",
		"/D/Programming/exploration/glycresoft_sqlalchemy/glycresoft_sqlalchemy/web_app/html/components/glycan_composition_generator.templ",
		"/D/Programming/exploration/glycresoft_sqlalchemy/glycresoft_sqlalchemy/web_app/services/make_glycan_hypothesis.py",
		"/D/Programming/exploration/glycresoft_sqlalchemy/glycresoft_sqlalchemy/web_app/common.py",
		"/D/Programming/exploration/glycresoft_sqlalchemy/glycresoft_sqlalchemy/web_app/task/do_naive_glycopeptide_hypothesis.py",
		"/D/Programming/exploration/glycresoft_sqlalchemy/glycresoft_sqlalchemy/web_app/services/make_glycopeptide_hypothesis.py",
		"/D/Programming/exploration/glycresoft_sqlalchemy/glycresoft_sqlalchemy/web_app/services/tandem_glycopeptide_search.py",
		"/D/Programming/exploration/glycresoft_sqlalchemy/glycresoft_sqlalchemy/web_app/services/peak_group_matching.py",
		"/D/Programming/exploration/glycresoft_sqlalchemy/glycresoft_sqlalchemy/web_app/services/json_api.py",
		"/D/Programming/exploration/glycresoft_sqlalchemy/glycresoft_sqlalchemy/web_app/services/sample_management.py",
		"/D/Programming/exploration/glycresoft_sqlalchemy/glycresoft_sqlalchemy/web_app/services/file_exports.py",
		"/D/Programming/exploration/glycresoft_sqlalchemy/glycresoft_sqlalchemy/web_app/services/task_management.py",
		"/D/Programming/exploration/glycresoft_sqlalchemy/glycresoft_sqlalchemy/web_app/services/server_sent_events.py",
		"/D/Programming/exploration/glycresoft_sqlalchemy/glycresoft_sqlalchemy/web_app/task/task_process.py",
		"/D/Programming/exploration/glycresoft_sqlalchemy/glycresoft_sqlalchemy/web_app/services/__init__.py",
		"/D/Programming/exploration/glycresoft_sqlalchemy/glycresoft_sqlalchemy/report/colors.py",
		"/D/Programming/exploration/glycresoft_sqlalchemy/glycresoft_sqlalchemy/report/plot_glycoforms.py",
		"/D/Programming/exploration/glycresoft_sqlalchemy/glycresoft_sqlalchemy/web_app/static/js/src/lib/context-menu.coffee",
		"/D/Programming/exploration/glycresoft_sqlalchemy/glycresoft_sqlalchemy/web_app/html/tandem_glycopeptide_search/components/glycopeptide_match_table.templ",
		"/D/Programming/exploration/glycresoft_sqlalchemy/glycresoft_sqlalchemy/proteomics/mzid_sa.py",
		"/D/Programming/exploration/glycresoft_sqlalchemy/glycresoft_sqlalchemy/web_app/static/js/src/lib/infer-protein-data-format.coffee",
		"/D/Programming/exploration/glycresoft_sqlalchemy/glycresoft_sqlalchemy/web_app/html/glycopeptide_search_space.templ",
		"/D/Programming/exploration/glycresoft_sqlalchemy/glycresoft_sqlalchemy/web_app/task/do_informed_glycopeptide_hypothesis.py",
		"/D/Programming/exploration/glycresoft_sqlalchemy/glycresoft_sqlalchemy/web_app/static/js/src/lib/ajax-form.coffee",
		"/D/Programming/exploration/glycresoft_sqlalchemy/glycresoft_sqlalchemy/search_space_builder/glycopeptide_builder/ms1/integrated_omics.py",
		"/D/Programming/exploration/glycresoft_sqlalchemy/datafiles/temp_dir/human_n_glycans.txt",
		"/D/Programming/exploration/glycresoft_sqlalchemy/glycresoft_sqlalchemy/web_app/project_manager.py",
		"/D/Programming/exploration/glycresoft_sqlalchemy/glycresoft_sqlalchemy/web_app/static/nwjs/project.js",
		"/D/Programming/exploration/glycresoft_sqlalchemy/glycresoft_sqlalchemy/web_app/static/nwjs/nodemain.js",
		"/D/Programming/exploration/glycresoft_sqlalchemy/glycresoft_sqlalchemy/structure/parser.py",
		"/C/Users/Joshua/Desktop/uganda/Project_d3_1/logo.html",
		"/D/Programming/exploration/glycresoft_sqlalchemy/glycresoft_sqlalchemy/web_app/nodemain.js",
		"/C/Users/Joshua/Desktop/uganda/Project_d3_1/index.html",
		"/C/Users/Joshua/Desktop/uganda/index.html",
		"/D/Programming/exploration/glycresoft_sqlalchemy/glycresoft_sqlalchemy/data_model/proteomics.py",
		"/D/Programming/exploration/glycresoft_sqlalchemy/glycresoft_sqlalchemy/web_app/tk_local_interface.py",
		"/D/Programming/exploration/glycresoft_sqlalchemy/glycresoft_sqlalchemy/web_app/static/nwjs/start.html",
		"/D/Programming/exploration/glycresoft_sqlalchemy/glycresoft_sqlalchemy/web_app/html/local_native_index.html",
		"/D/Programming/exploration/glycresoft_sqlalchemy/glycresoft_sqlalchemy/data_model/connection.py"
	],
	"find":
	{
		"height": 43.0
	},
	"find_in_files":
	{
		"height": 117.0,
		"where_history":
		[
			"",
			"D:\\Dropbox\\GlycomicsSandbox\\glypy",
			"D:\\Dropbox\\GlycomicsSandbox\\glypy\\glypy",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"_parse_isotope_string",
			"pyteomics.",
			"parser",
			"reduce",
			"memoize",
			"pyx",
			"inline",
			"fragments",
			"include_constants",
			"peak_group_id",
			"PeakGroupMatch",
			"Protein",
			"PeakGroupMatch",
			"PeakGroupMatchType",
			"PeakGroupMatch",
			"PeakGroupType",
			"make_fragment_map",
			"json",
			"unload",
			"removeLayer",
			"unload",
			"updateProteinChoice",
			"app_data",
			"PeakGroupMassShiftJoiningClassifier",
			"PeakGroupMatching",
			"Decon2LSPeakGrouper",
			"PeakGroupMatch",
			"TheoreticalGlycopeptide",
			"PeakGroupMatch",
			"search_type",
			"PeakGroupMatch",
			"MS1GlycanHypothesisSampleMatch",
			"PeakGroupDatabase",
			"PeakGroupMatch",
			"tag",
			"Namespace",
			"self.",
			"T_JointPeakGroupMatch",
			"_compositions",
			"composition_",
			"setupGlycopeptideCompositionTablePageHandler",
			"composition",
			"very",
			"350",
			"match",
			"setupGlycanCompositionTablePageHandler",
			"wide",
			"150px",
			"wide",
			"setupGlycopeptideCompositionTablePageHandlers",
			".dismiss",
			"0",
			"contentURL",
			"template",
			"view_database_search_results",
			"static/",
			"glycopeptide-match-table",
			"inatorial",
			"h",
			"JSONEncoderType",
			"glycopeptide",
			"filterfunc_template",
			"app",
			" manager.",
			"manager.",
			"manager",
			"name",
			"Classifier",
			"search_type",
			"csv",
			"Application",
			"convert_dict_to_sequence",
			"InformedPeptide",
			"int\\(",
			"int(",
			"int",
			"Proteomics",
			"NaiveGlycopeptideHypothesisBuilderTask",
			"Naive",
			"build_naive_glycopeptide_search_space",
			"secure_protein_fasta",
			"protein_fasta",
			"minimum_ms2_score",
			"minimum-score",
			"minimum",
			"'minimum-score'",
			"reload",
			"update_settings",
			"reload",
			"settings",
			"preferen",
			"get_color",
			"prefere",
			"Driver",
			"|",
			"CONTROLLERS",
			"CLIENTS",
			"BackendServer",
			"s4",
			"PROJECTS",
			"currentWindow",
			"ApplicationServer",
			"stoploop",
			"getNextPort",
			"GetNextPort",
			"5000",
			"my-app",
			"STATE",
			"sample_name",
			"err, ",
			"\"projects\"",
			"get_directory",
			"\")",
			"icudt",
			"dll",
			"self",
			"args.",
			"results_database",
			"SQLiteConnectionManager",
			"=",
			"view_tandem_glycopeptide_database_search_results",
			"dismiss",
			"home",
			"view_tandem_glycopeptide_protein_results",
			"settings",
			"filterfunc_template",
			"filter",
			"make_"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"AminoAcidStruct",
			"calculated_mass",
			"LinearCodeError",
			"IUPACError",
			"glypy",
			"percent_of_max",
			"spectrum_model.",
			"column_data",
			"table_data",
			"tabledata",
			"$1",
			"",
			"$1$2",
			"# logger.debug",
			"DrawTreeNode",
			",0  ",
			",0   ",
			"IUPACException",
			"intro_files",
			"$1\\tNoDesc\\t",
			"",
			" \"	NoDesc",
			" \"\\tNoDesc",
			"superclass",
			"",
			"load(\"$1\")",
			"+",
			"",
			"__table_name",
			"_table_name",
			"_table_name_",
			"residue",
			"",
			": function",
			"",
			"\"",
			"`None`",
			"linear_code",
			"monosaccharide_reference",
			"base_type",
			"fragment_data",
			"c1_",
			"c2_",
			"a_",
			"x_",
			"c2_",
			"c1_",
			"x_",
			"a_",
			"temp1_",
			"x_",
			"a_",
			"]",
			"[",
			"",
			"root",
			"\\n",
			"break_links",
			"#missing",
			"OrderedMultiMap",
			"lw=1",
			"scale=1",
			"derivatizable_substituents",
			"child_loss",
			"parent_loss",
			"condensed",
			"",
			",G:",
			"",
			"logger.",
			"substituent_links",
			"golden_pair",
			"golden_pairs",
			"golden_pair_map",
			"\\n<ul>",
			"\\n<li>",
			"\\n<$1>",
			"\\n<",
			",\\n",
			"push",
			"parenLevel",
			"currentAA",
			"currentMod",
			"cTerm",
			"nTerm",
			"nextChr",
			"_identity",
			"",
			"self.identified_spectra",
			"title",
			"$1 >= {$1} and ",
			"$1 >= {$1}",
			"",
			"\\n",
			", ",
			", $1",
			", ",
			"$1",
			"glycan_lib",
			"did_match_counter",
			"theoretical[",
			"$1",
			")\n",
			"",
			"\"\\1\",\\n",
			"\"(\\1)\",\\n",
			"\\3-\\2-\\1",
			"prediction_frames",
			",",
			"value is None",
			"",
			"fit_svc",
			" ",
			" -g",
			", ",
			"",
			"0",
			"#print",
			"real['obs_ion']",
			"\"",
			",\\n",
			"PeptideSequenceBase",
			"\"full\"",
			"]",
			"[",
			"fit_radial_basis_svm",
			"classify_with_model_app.add",
			"build_model_app.add"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 2,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "/D/Programming/cython-pyteomics/setup.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 819,
						"regions":
						{
						},
						"selection":
						[
							[
								810,
								810
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "/D/Programming/cython-pyteomics/test/test_cmass_compat.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9637,
						"regions":
						{
						},
						"selection":
						[
							[
								9247,
								9247
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": -0.0,
						"translation.y": 3023.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "/D/Programming/cython-pyteomics/pyteomics/cythonize/cmass.pyx",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 32268,
						"regions":
						{
						},
						"selection":
						[
							[
								31060,
								31060
							]
						],
						"settings":
						{
							"syntax": "Packages/Cython+/Cython.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 9433.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "/D/Programming/cython-pyteomics/pyteomics/cythonize/cmass.pxd",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 987,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Cython+/Cython.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "/D/Programming/cython-pyteomics/makefile",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 178,
						"regions":
						{
						},
						"selection":
						[
							[
								178,
								178
							]
						],
						"settings":
						{
							"syntax": "Packages/Makefile/Makefile.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 25.0
	},
	"input":
	{
		"height": 38.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 112.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.rope_python_documentation":
	{
		"height": 112.0
	},
	"output.unsaved_changes":
	{
		"height": 112.0
	},
	"pinned_build_system": "",
	"project": "cython-pyteomics.sublime-project",
	"replace":
	{
		"height": 50.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"make",
				"makefile"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 625.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"D:\\Dropbox\\GlycomicsSandbox\\GlycReSoft2_Devel\\python\\glycresoft_ms2.sublime-project"
			]
		],
		"width": 475.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 515.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
